// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorkflowLib.Examples.UnifiedBusinessPlatform.Core.DbContexts;

#nullable disable

namespace WorkflowLib.Examples.UnifiedBusinessPlatform.Core.Migrations
{
    [DbContext(typeof(EmployeesMvcDbContext))]
    partial class EmployeesMvcDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyContract", b =>
                {
                    b.Property<long>("ContractsId")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerCompaniesId")
                        .HasColumnType("bigint");

                    b.HasKey("ContractsId", "CustomerCompaniesId");

                    b.HasIndex("CustomerCompaniesId");

                    b.ToTable("CompanyContract");
                });

            modelBuilder.Entity("CompanyEmployee", b =>
                {
                    b.Property<long>("CompaniesId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeesId")
                        .HasColumnType("bigint");

                    b.HasKey("CompaniesId", "EmployeesId");

                    b.HasIndex("EmployeesId");

                    b.ToTable("CompanyEmployee");
                });

            modelBuilder.Entity("ContractCustomer", b =>
                {
                    b.Property<long>("ContractsId")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomersId")
                        .HasColumnType("bigint");

                    b.HasKey("ContractsId", "CustomersId");

                    b.HasIndex("CustomersId");

                    b.ToTable("ContractCustomer");
                });

            modelBuilder.Entity("ContractEmployee", b =>
                {
                    b.Property<long>("ContractsId")
                        .HasColumnType("bigint");

                    b.Property<long>("OurEmployeesId")
                        .HasColumnType("bigint");

                    b.HasKey("ContractsId", "OurEmployeesId");

                    b.HasIndex("OurEmployeesId");

                    b.ToTable("ContractEmployee");
                });

            modelBuilder.Entity("ContractOrganization", b =>
                {
                    b.Property<long>("ContractsId")
                        .HasColumnType("bigint");

                    b.Property<long>("OurOrganizationsId")
                        .HasColumnType("bigint");

                    b.HasKey("ContractsId", "OurOrganizationsId");

                    b.HasIndex("OurOrganizationsId");

                    b.ToTable("ContractOrganization");
                });

            modelBuilder.Entity("EmployeeOrganizationItem", b =>
                {
                    b.Property<long>("EmployeesId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganizationItemsId")
                        .HasColumnType("bigint");

                    b.HasKey("EmployeesId", "OrganizationItemsId");

                    b.HasIndex("OrganizationItemsId");

                    b.ToTable("EmployeeOrganizationItem");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.BusinessDocuments.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("ContractType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Customers.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<long?>("ContactId")
                        .HasColumnType("bigint");

                    b.Property<int>("CrmRoleType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("HasVatRegistration")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("text");

                    b.Property<string>("ShippingAddress")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("VatNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Customers.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("HomePhone")
                        .HasColumnType("text");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OfficeEmail")
                        .HasColumnType("text");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("WorkPhone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Customers.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContactId")
                        .HasColumnType("bigint");

                    b.Property<int>("CrmRoleType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<long?>("UserAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ContactId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.Absense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateEndActual")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateEndExpected")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateStartActual")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateStartExpected")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Reason")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Absenses");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AuthProviderType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EmployDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<int?>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("ICQ")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Locale")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ReplacementMode")
                        .HasColumnType("integer");

                    b.Property<string>("Skype")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("WorkPhone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.EmployeeUserAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<long>("UserAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("EmployeeUserAccounts");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("HeadItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("HeadItemId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.OrganizationItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("HardDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("text");

                    b.Property<long?>("ParentItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentItemId");

                    b.ToTable("OrganizationItems");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.Skill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.UserAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastSeenDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("bytea");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.UserAccountGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<long>("UserAccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserGroupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.HasIndex("UserGroupId");

                    b.ToTable("UserAccountGroups");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.UserGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AuthorChangedId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AuthorCreatedId")
                        .HasColumnType("bigint");

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsGroupByDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorChangedId");

                    b.HasIndex("AuthorCreatedId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Languages.LanguageKey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Endonym")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LanguageType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("LanguageKeys");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Languages.LanguageKeyForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUid")
                        .HasColumnType("text");

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LanguageKeyForms");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Languages.LanguageKeyValuePair", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUid")
                        .HasColumnType("text");

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("LanguageKeyId")
                        .HasColumnType("bigint");

                    b.Property<int>("LanguageType")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LanguageKeyId");

                    b.ToTable("LanguageKeyValuePairs");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Products.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<int>("CompletePercent")
                        .HasColumnType("integer");

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateEndActual")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateEndExpected")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateStartActual")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateStartExpected")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("GuaranteePeriodInMonths")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<long?>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ContractId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Products.ProjectPhase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectPlanItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectPlanItemId");

                    b.ToTable("ProjectPhase");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Products.ProjectPlanItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Priority")
                        .HasColumnType("integer");

                    b.Property<long?>("ProjectPlanItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectPlanItemId");

                    b.ToTable("ProjectPlanItem");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.RiskManagement.Risk", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AuthorChangedId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AuthorCreatedId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AuthorResolvedId")
                        .HasColumnType("bigint");

                    b.Property<int?>("BusinessEntityStatus")
                        .HasColumnType("integer");

                    b.Property<string>("CommentResolved")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateResolved")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<int>("Severity")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorChangedId");

                    b.HasIndex("AuthorCreatedId");

                    b.HasIndex("AuthorResolvedId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Risk");
                });

            modelBuilder.Entity("CompanyContract", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.BusinessDocuments.Contract", null)
                        .WithMany()
                        .HasForeignKey("ContractsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkflowLib.Shared.Models.Business.Customers.Company", null)
                        .WithMany()
                        .HasForeignKey("CustomerCompaniesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyEmployee", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.Customers.Company", null)
                        .WithMany()
                        .HasForeignKey("CompaniesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContractCustomer", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.BusinessDocuments.Contract", null)
                        .WithMany()
                        .HasForeignKey("ContractsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkflowLib.Shared.Models.Business.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContractEmployee", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.BusinessDocuments.Contract", null)
                        .WithMany()
                        .HasForeignKey("ContractsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", null)
                        .WithMany()
                        .HasForeignKey("OurEmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContractOrganization", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.BusinessDocuments.Contract", null)
                        .WithMany()
                        .HasForeignKey("ContractsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Organization", null)
                        .WithMany()
                        .HasForeignKey("OurOrganizationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeOrganizationItem", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.OrganizationItem", null)
                        .WithMany()
                        .HasForeignKey("OrganizationItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Customers.Company", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.Customers.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Customers.Customer", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.Customers.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("WorkflowLib.Shared.Models.Business.Customers.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.UserAccount", "UserAccount")
                        .WithMany()
                        .HasForeignKey("UserAccountId");

                    b.Navigation("Company");

                    b.Navigation("Contact");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.Absense", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.EmployeeUserAccount", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.UserAccount", "UserAccount")
                        .WithMany()
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.Organization", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.Customers.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.OrganizationItem", "HeadItem")
                        .WithMany()
                        .HasForeignKey("HeadItemId");

                    b.Navigation("Company");

                    b.Navigation("HeadItem");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.OrganizationItem", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.OrganizationItem", "ParentItem")
                        .WithMany("SubItems")
                        .HasForeignKey("ParentItemId");

                    b.Navigation("ParentItem");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.Skill", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", null)
                        .WithMany("Skills")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.UserAccountGroup", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.UserAccount", "UserAccount")
                        .WithMany()
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.UserGroup", "UserGroup")
                        .WithMany()
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");

                    b.Navigation("UserGroup");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.UserGroup", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.UserAccount", "AuthorChanged")
                        .WithMany()
                        .HasForeignKey("AuthorChangedId");

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.UserAccount", "AuthorCreated")
                        .WithMany()
                        .HasForeignKey("AuthorCreatedId");

                    b.Navigation("AuthorChanged");

                    b.Navigation("AuthorCreated");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Languages.LanguageKeyValuePair", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.Languages.LanguageKey", "LanguageKey")
                        .WithMany()
                        .HasForeignKey("LanguageKeyId");

                    b.Navigation("LanguageKey");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Products.Project", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.Customers.Company", "Company")
                        .WithMany("Projects")
                        .HasForeignKey("CompanyId");

                    b.HasOne("WorkflowLib.Shared.Models.Business.BusinessDocuments.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkflowLib.Shared.Models.Business.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.Navigation("Company");

                    b.Navigation("Contract");

                    b.Navigation("Customer");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Products.ProjectPhase", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.Products.Project", "Project")
                        .WithMany("ProjectPhases")
                        .HasForeignKey("ProjectId");

                    b.HasOne("WorkflowLib.Shared.Models.Business.Products.ProjectPlanItem", "ProjectPlanItem")
                        .WithMany()
                        .HasForeignKey("ProjectPlanItemId");

                    b.Navigation("Project");

                    b.Navigation("ProjectPlanItem");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Products.ProjectPlanItem", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.Products.ProjectPlanItem", null)
                        .WithMany("Items")
                        .HasForeignKey("ProjectPlanItemId");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.RiskManagement.Risk", b =>
                {
                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", "AuthorChanged")
                        .WithMany()
                        .HasForeignKey("AuthorChangedId");

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", "AuthorCreated")
                        .WithMany()
                        .HasForeignKey("AuthorCreatedId");

                    b.HasOne("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", "AuthorResolved")
                        .WithMany()
                        .HasForeignKey("AuthorResolvedId");

                    b.HasOne("WorkflowLib.Shared.Models.Business.Products.Project", null)
                        .WithMany("Risks")
                        .HasForeignKey("ProjectId");

                    b.Navigation("AuthorChanged");

                    b.Navigation("AuthorCreated");

                    b.Navigation("AuthorResolved");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Customers.Company", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.Employee", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.InformationSystem.OrganizationItem", b =>
                {
                    b.Navigation("SubItems");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Products.Project", b =>
                {
                    b.Navigation("ProjectPhases");

                    b.Navigation("Risks");
                });

            modelBuilder.Entity("WorkflowLib.Shared.Models.Business.Products.ProjectPlanItem", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
